{"data":{"allSnap":{"nodes":[{"snapId":"npm:@chainsafe/aleo-snap","name":"Aleo","summary":"Enables MetaMask users to interact with Aleo blockchain.","description":{"description":"Enables MetaMask users to interact with Aleo blockchain."}},{"snapId":"npm:@algorandfoundation/algorand-metamask-snap","name":"Algorand Wallet","summary":"Manage Algorand accounts with MetaMask, transfer, swap, and interact with Algorand dapps.","description":{"description":"Manage Algorand accounts with MetaMask, transfer, swap, and interact with Algorand dapps.\n\nAlgorand is a scalable layer-1 blockchain powered by the Pure Proof-of-Stake consensus mechanism with quick block times and instant finality.\n\nWebsite coming soon."}},{"snapId":"npm:walletchat-metamask-snap","name":"app.walletchat.fun 💬","summary":"Send and receive DMs inside MetaMask, with WalletChat.","description":{"description":"Send and receive DMs from any wallet address or ENS inside MetaMask, with WalletChat.\n\nAfter enabling this Snap, you will need to set up a WalletChat account, in 3 simple steps. Then all set!\nFrom now on, you will get a pop up notification displaying each DM you receive. You can respond to the DM from the same pop up.\nTo initiate new messages, for now, you will need to use https://app.walletchat.fun/. In the near future, this wlll also be possible from within the Snap.\n\nDitch Telegram and turn your MetaMask into a web3-native messenger!\nVideo tutorial: https://docs.walletchat.fun/metamask-integration\n\nWalletChat is the leading web3 messaging ecosystem, available across multiple blockchains and embedded inside dapps ranging from NFTfi, games, and wallets like Ledger Live. Learn more at https://www.walletchat.fun/."}},{"snapId":"npm:casper-manager","name":"Casper Manager","summary":"Sign deploys and messages for the Casper Blockchain with your Casper account(s).","description":{"description":"Sign deploys and messages for the Casper Blockchain with your Casper account(s).\n\nAfter installing, visit the website to interact with the Casper Blockchain. You can also connect to the block explorer at https://div3.in."}},{"snapId":"npm:wallet-guard-snap","name":"Wallet Guard","summary":"Protect your crypto with transaction insights and proactive security alerts.","description":{"description":"Protect your crypto. Wallet Guard supports transaction simulation and automated approval revoking reminders for you. Stop guessing about your transactions when performing swaps, claims, and mints!"}},{"snapId":"npm:@pushprotocol/snap","name":"Push","summary":"Web3 notifications directly in your MetaMask wallet.","description":{"description":"The Push Snap is a MetaMask wallet enhancement that allows you to receive real-time notification alerts of your favourite web3 applications directly in your MetaMask wallet.\n\nAdd to MetaMask now.\n\n--\n\nTerms to know:\n\n- Channels: Channels simply represent any protocol or dApp that's activated itself on Push protocol and has the capability of sending notifications. For instance, Uniswap, ENS, Lens Protocol etc. are channels on Push Protocol that you can opt-in to.\n- Notifications: Notifications are alerts from any of the channels that user opts-in to. For example, loan liquidation alerts, new governance proposals, ENS domain name expiry or web3 news updates.\n\n—-Web3 users often interact with a plethora of decentralized applications (dapps) ranging from DeFi tools, to NFT marketplaces to media channels. With so many dapps, staying updated often demands constant attention and regular logins, resulting in an overwhelming user experience.\n\nThe Push Snap aims to resolve this issue by bringing all essential updates for the user directly into their MetaMask wallet. This eliminates the need to bounce between multiple web3 applications as the user's MetaMask wallet now acts as a unified notification center for all imperative web3 updates.\n\nGet Started in 4-Simple Steps\n\n1. Installation: Click on 'Add to MetaMask' button shown above. This initiates the process of adding the Push Snap to your MetaMask wallet.\n2. Setting-Up Push Snap: Once installed, you should be prompted to visit Push dapp, i.e., https://app.push.org/snap. Visit the dApp to proceed with next steps.\n3. Adding your Address: Once connected to the dapp, the Snap will require confirmation to add your address. Adding of address in the Snap means enabling your wallet to receive notifications.\n4. Opt-In to Channels: Once address is added, simply click on Get Started. This takes you to https://app.push.org/channels wherein you can opt-in to any of your favorite channels to receive real-time notifications.\n\nVideo Walk-through\n\nhttps://www.youtube.com/watch?v=LjPxKoYLiGs\n\nAdditional Features of Push Snap\n\n1. Address Selection: Users can add or remove their preferred addresses to the snap for notification whenever they want.\n2. Customization of Pop-Ups: Push Snap also allows users to toggle popup notifications at their convenience."}},{"snapId":"npm:@tuum-tech/identify","name":"Identify","summary":"Extends the functionality of the most popular crypto wallet by adding Decentralized Identity.","description":{"description":"Extends the functionality of the most popular crypto wallet by adding Decentralized Identity.\n\nVisit the website to learn how to integrate Identify into your dapps."}},{"snapId":"npm:blockfence-insights","name":"Blockfence","summary":"Blockfence empowers you to evaluate the safety of your transactions before giving them a green light. This ensures you steer clear of scams and fraudulent activities.","description":{"description":"Blockfence empowers you to evaluate the safety of your transactions before giving them a green light. This ensures you steer clear of scams and fraudulent activities. Moreover, Blockfence Snap consolidates information from industry security leaders, providing clarity on the dAPPs you engage with, the contracts you transact with, and much more.\n\nAfter installing the Snap, you will see it in the transaction confirmation window."}},{"snapId":"npm:@metamask/bip32-example-snap","name":"BIP-32 Example Snap","summary":"MetaMask example snap demonstrating the use of `snap_getBip32Entropy`.","description":{"description":"MetaMask example snap demonstrating the use of `snap_getBip32Entropy`."}},{"snapId":"npm:@metamask/bip44-example-snap","name":"BIP-44 Example Snap","summary":"MetaMask example snap demonstrating the use of `snap_getBip44Entropy`.","description":{"description":"MetaMask example snap demonstrating the use of `snap_getBip44Entropy`."}},{"snapId":"npm:@metamask/cronjob-example-snap","name":"Cronjob Example Snap","summary":"MetaMask example snap demonstrating the use of cronjobs in snaps.","description":{"description":"MetaMask example snap demonstrating the use of cronjobs in snaps."}},{"snapId":"npm:@metamask/dialog-example-snap","name":"Dialog Example Snap","summary":"MetaMask example snap demonstrating the use of `snap_dialog`.","description":{"description":"MetaMask example snap demonstrating the use of `snap_dialog`."}},{"snapId":"npm:@metamask/error-example-snap","name":"Error Example Snap","summary":"MetaMask example snap demonstrating the use of error handling in snaps.","description":{"description":"MetaMask example snap demonstrating the use of error handling in snaps."}},{"snapId":"npm:@metamask/ethereum-provider-example-snap","name":"Ethereum Provider Example Snap","summary":"MetaMask example snap demonstrating the use of the Ethereum Provider API and `endowment:ethereum-provider` permission.","description":{"description":"MetaMask example snap demonstrating the use of the Ethereum Provider API and `endowment:ethereum-provider` permission."}},{"snapId":"npm:@metamask/ethers-js-example-snap","name":"Ethers.js Example Snap","summary":"MetaMask example snap demonstrating how to use Ethers.js inside a snap.","description":{"description":"MetaMask example snap demonstrating how to use Ethers.js inside a snap."}},{"snapId":"npm:@metamask/get-entropy-example-snap","name":"Get Entropy Example Snap","summary":"MetaMask example snap demonstrating the use of `snap_getEntropy`.","description":{"description":"MetaMask example snap demonstrating the use of `snap_getEntropy`."}},{"snapId":"npm:@metamask/json-rpc-example-snap","name":"JSON-RPC Example Snap","summary":"An example snap to test JSON-RPC permissions.","description":{"description":"An example snap to test JSON-RPC permissions."}},{"snapId":"npm:@metamask/manage-state-example-snap","name":"Manage State Example Snap","summary":"MetaMask example snap demonstrating the use of `snap_manageState`.","description":{"description":"MetaMask example snap demonstrating the use of `snap_manageState`."}},{"snapId":"npm:@metamask/network-example-snap","name":"Network Access Test Snap","summary":"MetaMask example snap demonstrating the use of the `endowment:network-access` permission in snaps.","description":{"description":"MetaMask example snap demonstrating the use of the `endowment:network-access` permission in snaps."}},{"snapId":"npm:@metamask/notification-example-snap","name":"Notifications Example Snap","summary":"MetaMask example snap demonstrating the use of `snap_notify`.","description":{"description":"MetaMask example snap demonstrating the use of `snap_notify`."}},{"snapId":"npm:@metamask/insights-example-snap","name":"Insights Example Snap","summary":"MetaMask example snap demonstrating the use of the Transaction Insights API.","description":{"description":"MetaMask example snap demonstrating the use of the Transaction Insights API."}},{"snapId":"npm:@metamask/wasm-example-snap","name":"WebAssembly Example Snap","summary":"MetaMask example snap demonstrating the use of WebAssembly and the `endowment:webassembly` permission.","description":{"description":"MetaMask example snap demonstrating the use of WebAssembly and the `endowment:webassembly` permission."}},{"snapId":"npm:@kleros/scout-snap","name":"Kleros Scout","summary":"A Snap that retrieves contract metadata from the Kleros Curate registries.","description":{"description":"This Snap pulls contract metadata from Kleros's decentralized token curated registries to provide insights to the contract you are interacting with. After installing the Snap, you will see it in the transaction confirmation window."}},{"snapId":"npm:tezos-metamask-snap","name":"Tezos Wallet","summary":"Tezos Wallet allows you to use your MetaMask wallet to interact with Tezos dapps, specifically for signing payloads and operations.","description":{"description":"Tezos Wallet allows you to use your MetaMask wallet to interact with Tezos dapps, specifically for signing payloads and operations."}},{"snapId":"npm:mina-portal","name":"MinaPortal","summary":"Interact with Mina protocol using MetaMask.","description":{"description":"Interact with Mina protocol using MetaMask. After installing the Snap, visit the website to manage your Mina account."}},{"snapId":"npm:@pianity/arsnap","name":"Arweave Wallet","summary":"Access Arweave through MetaMask and interact with Arweave dapps.","description":{"description":"Access Arweave through MetaMask and interact with Arweave dapps.\n\nAfter installing the Snap, visit the website to manage your Arweave account."}},{"snapId":"npm:btcsnap","name":"Zion","summary":"The world's first application allowing users to directly manage Bitcoin within the MetaMask interface, without having to wrap tokens.","description":{"description":"Zion is the world's first application allowing users to directly manage Bitcoin within the MetaMask interface, without having to wrap tokens.\n\nAfter installing the Snap, visit the website to manage your Bitcoin accounts."}},{"snapId":"npm:@unipasswallet/unipass-snap","name":"UniPass","summary":"UniPass is a stablecoin payment product designed to enhance your MetaMask experience by harnessing the power of smart contract wallet capabilities.","description":{"description":"UniPass is a stablecoin payment product designed to enhance your MetaMask experience by harnessing the power of smart contract wallet capabilities.\n\nAfter installing the Snap, visit the website to connect and explore all the available features."}},{"snapId":"npm:@forta-network/metamask-snap","name":"Forta","summary":"Automatically scans the addresses in your pre-signed transaction against Forta's database of known scammers. Based on the results, the Snap will display a “high-risk” or “low-risk” warning message to the user.","description":{"description":"Forta protects users from scams by highlighting the risk of a user-initiated transaction before the transaction is approved.\n\nAbout Forta\n\nForta is the largest network of security intelligence in Web3. The network provides real-time intelligence about scams, exploits and other suspicious activity to 100+ teams, including DeFi protocols, centralized exchanges, Web3 wallets, security tools and crypto compliance platforms.\n\nAbout Forta Snap\n\nOnce installed, Forta Snap automatically scans the addresses in a user's pre-signed transaction against Forta's database of known scammers. Based on the results, the Snap will display a 'high-risk' or 'low-risk' warning message to the user before a transaction is approved. At this stage, the user can reject the transaction based on the risk assessment. Some of the scam types covered by the Forta Snap include:\n\n- Token impersonation\n- Pig butchering\n- Gas minting\n- Sleep minting\n- Hard and soft rug Pulls\n- NFT wash trading\n\nForta Snap Security\n\n- Access to keys or user assets - No\n- Access to create/update/modify transactions - No\nAccess to read transactions - Yes\n\nForta Snap does not have access to users' keys or assets. Forta Snap access is limited to reading the transactions and displaying the risk rating. Audit Status - Forta Snap has been audited by OtterSec and the audit link can be found above.\n\nHow to Install\n\nA user can install Forta Snap by clicking on 'Add to MetaMask' button above. During installation, the Snap will request the access required for the Snap to perform.\n\nHow to use\n\nOnce installed, the Snap will automatically scan a user's pre-signed transactions and flag any scammer addresses involved. Warning messages will appear in the 'Forta' tab in the MetaMask transaction flow.\n\nQuestions?\n\nIf you have questions or encounter any issues with the Forta Snap, please contact us: info@forta.org. You can also contact the Forta Snap team via Github to report problems and provide feedback - https://github.com/forta-network/metamask-snap."}},{"snapId":"npm:@metamask/get-locale-example-snap","name":"Get Locale Example Snap","summary":"MetaMask example snap demonstrating the use of `snap_getLocale`.","description":{"description":"MetaMask example snap demonstrating the use of `snap_getLocale`."}},{"snapId":"npm:@metamask/lifecycle-hooks-example-snap","name":"Lifecycle Hooks Example Snap","summary":"MetaMask example snap demonstrating the use of the `onInstall` and `onUpdate` lifecycle hooks.","description":{"description":"MetaMask example snap demonstrating the use of the `onInstall` and `onUpdate` lifecycle hooks."}},{"snapId":"npm:@metamask/localization-example-snap","name":"Localization Example Snap","summary":"MetaMask example snap demonstrating how to localize a Snap.","description":{"description":"MetaMask example snap demonstrating how to localize a Snap."}},{"snapId":"npm:@tenderly/metamask-snap","name":"Tenderly TX Preview","summary":"Preview transactions before sending them on-chain to get valuable insights, avoid failed transactions, and save funds. Get human-readable information on transferred assets with corresponding dollar values for ERC-20 tokens and NFTs.","description":{"description":"Preview transactions before sending them on-chain to get valuable insights, avoid failed transactions, and save funds. Get human-readable information on transferred assets with corresponding dollar values for ERC-20 tokens and NFTs.\n\nThe Tenderly TX Preview insight will be displayed in the transaction confirmation flow. Before you can see the insight, you must configure the Snap with your Tenderly account. Visit the website to learn more."}},{"snapId":"npm:@goplus/riskdetect-snap","name":"Assets Risk Detection","summary":"Detect risks of user assets with GoPlus Security.","description":{"description":"A MetaMask Snap that can detect risks of user assets, supported by GoPlus Security.\n\nAfter installing the Snap, visit the website to connect your account and run the detection."}},{"snapId":"npm:@solflare-wallet/solana-snap","name":"Solana Wallet","summary":"Manage Solana-based tokens and NFTs, swap, stake, bridge from EVM to SOL, and connect to Solana apps with MetaMask.","description":{"description":"Manage Solana-based tokens and NFTs, swap, stake, bridge from EVM to SOL, and connect to Solana apps with MetaMask.\n\nAfter installing the Snap, visit the website to connect and manage your Solana accounts."}},{"snapId":"npm:@vegaprotocol/snap","name":"Vega Protocol","summary":"Vega is an order book based DEX with no gas fees for trading. Deposit ERC20s and trade on the Vega appchain.","description":{"description":"Vega is an order book based DEX with no gas fees for trading. Deposit ERC20s and trade on the Vega appchain. Vega markets are created and controlled by the Vega community and any trader operating as a market maker can commit to provide liquidity and share fee revenue."}},{"snapId":"npm:@blockchain-lab-um/masca","name":"Masca","summary":"A Snap that enables MetaMask to be a universal decentralized identity wallet - from managing your identifiers (DIDs) to handling credentials (VCs).","description":{"description":"Masca enables everyone to build their decentralized identity by expanding MetaMask with functionalities to manage your identifiers and credentials (based on DIDs, VCs, and VPs). Store your credentials locally or on Ceramic Network and receive/share data over popular identity protocols, such as OID4VC and Polygon ID. This makes Masca a truly universal identity solution, perfect for Web3 explorers and non-Web3 native users. Any website can connect to Masca to access identity data, and dapp developers can already start with the integration!\n\nAfter installing the Snap, visit the website to manage your decentralized identity."}},{"snapId":"npm:@leapwallet/metamask-cosmos-snap","name":"Leap Cosmos Wallet","summary":"Securely manage keys, connect to Cosmos dapps, and sign transactions.","description":{"description":"Securely manage keys, connect to Cosmos dapps, and sign transactions.\n\nAfter installing the Snap, visit the website to connect with MetaMask and start using the Snap."}},{"snapId":"npm:web3-security-snap","name":"Web3 Security","summary":"Integrates BEI Risk Scores into MetaMask.","description":{"description":"By seamlessly integrating AnChain.AI's revolutionary AI-powered Blockchain Ecosystem Intelligence (BEI) into your MetaMask wallet, Web3 Security Snap empowers you to make informed decisions and engage fearlessly with the digital economy.\n\nAfter installing the Snap, you will see it in the transaction confirmation window. You can also visit the website to learn more about how to use it."}},{"snapId":"npm:@rarimo/rarime","name":"RariMe","summary":"Safely holds any of your credentials and allows you to prove your identity without revealing any personal data. Powered by Rarimo Protocol and Zero-Knowledge Proof technology.","description":{"description":"RariMe is a MetaMask Snap that safely holds any of your credentials and allows you to prove your identity without revealing any personal data. Powered by Rarimo Protocol and Zero-Knowledge Proof technology.\n\nThis Snap allows you to 1) receive credentials 2) create Zero Knowledge Proofs of your credentials and 3) submit proofs to dapps. For each of these steps, you will be automatically prompted by the identity providers and the dapps that have integrated with RariMe."}},{"snapId":"npm:@partisiablockchain/snap","name":"Partisia Blockchain","summary":"The Partisia Blockchain Snap allows dapp developers to use MetaMask for signing transactions towards Partisia Blockchain.","description":{"description":"The Partisia Blockchain Snap allows dapp developers to use MetaMask for signing transactions towards Partisia Blockchain.\n\nAfter installing the Snap, visit the website to Sign in with MetaMask and manage your Partisia account."}},{"snapId":"npm:saferoot-metamask-snap","name":"Saferoot","summary":"Saferoot intercepts dangerous transactions in real-time and instantly moves your assets to safety.","description":{"description":"Saferoot intercepts dangerous transactions in real-time and instantly moves your assets to safety.\n\nAfter installing the Snap, visit Saferoot's website to customize your security settings."}},{"snapId":"npm:keychain-snap","name":"EthSign Keychain","summary":"EthSign Keychain is an encrypted password manager. State-keeping outside of MetaMask is optional and delegated to Arweave or AWS to enable decentralized cross-device synchronization.","description":{"description":"EthSign Keychain is an encrypted password manager. State-keeping outside of MetaMask is optional and delegated to Arweave or AWS to enable decentralized cross-device synchronization.\n\nThis Snap is designed to work with a companion extension or with dapps that have implemented the EthSign Keychain API. After installing the Snap, visit the website to learn more."}},{"snapId":"npm:@drift-labs/snap-solana","name":"Connect by Drift","summary":"An open-sourced Solana Snap that allows MetaMask users to natively interact with Solana applications.","description":{"description":"Connect by Drift allows MetaMask to seamlessly connect to Drift and function as a Solana wallet. Users of the Snap can connect to Drift, bridge their Ethereum assets to Solana, and trade on Drift all from within MetaMask.\n\nAfter installing the Snap, visit the website and click Launch App to try it. Please note: Drift may not be available in your region."}},{"snapId":"npm:@xmtp/snap","name":"Sign in with XMTP","summary":"Use the “Sign in with XMTP” MetaMask Snap to securely and conveniently sign in to any web app built with XMTP.","description":{"description":"Use the “Sign in with XMTP” MetaMask Snap to securely and conveniently sign in to any web app built with XMTP.\n\nWhen you install the Snap, you give it permission to store your XMTP user keys in MetaMask secure storage. From then on, when you use an app you've authorized to work with Sign in with XMTP, the Snap seamlessly and securely allows the app to use those keys without accessing the key material directly, enabling you to start messaging without needing to provide a signature."}},{"snapId":"npm:@cubist-labs/cubesigner-snap","name":"CubeSigner","summary":"An API for developers to manage MetaMask users' EVM/non-EVM keys in secure hardware.","description":{"description":"A Snap for Snap- and dapp-developers to safely manage EVM, Bitcoin, Solana, and other keys on behalf of MetaMask end users. Use the CubeSigner API to generate keys and sign transactions completely within server-side secure hardware. Your users' keys are never exposed in memory to attackers, and there's no risk of accidentally leaking keys. Visit https://cubist.dev/cubesigner-snap to get started."}},{"snapId":"npm:@cosmsnap/snap","name":"Cosmos Extension","summary":"Cosmos Extension that adds Cosmos support to MetaMask.","description":{"description":"Cosmos Extension aims to add full support of MetaMask, a highly popular Ethereum wallet, to all Cosmos SDK blockchains, potentially opening the door to over 30 million Ethereum users and stimulating growth for every project in the Cosmos ecosystem.\n\nAfter installing the Snap, visit the website to manage your Cosmos account."}},{"snapId":"npm:@shapeshiftoss/metamask-snaps","name":"ShapeShift Multichain","summary":"Support 11 chains including Bitcoin, Dogecoin, Cosmos, Litecoin, Binance Chain, THORChain, Bitcoin Cash and more in one Snap.","description":{"description":"Support 11 chains including Bitcoin, Dogecoin, Cosmos, Litecoin, Binance Chain, THORChain, Bitcoin Cash and more in one Snap.\n\nAdd the Snap to your MetaMask, visit https://app.shapeshift.com, and connect with MetaMask to start using all the chains supported.\n\nPlease note: you must connect Account 1 to the ShapeShift website to use all the chains supported by the Snap. Hardware wallets or imported private keys are not supported with this feature."}},{"snapId":"npm:@consensys/starknet-snap","name":"Starknet","summary":"Deploy Starknet accounts, make transactions on Starknet, and interact with Starknet smart contracts.","description":{"description":"The Starknet Snap allows users to deploy Starknet accounts, make transactions on Starknet, and interact with Starknet smart contracts.\n\nAfter installing the Snap, visit the website to set up your Starknet account."}},{"snapId":"npm:@web3mq/snap","name":"Web3MQ","summary":"Web3-native decentralized communication protocol. Encrypted, efficient and borderless.","description":{"description":"Web3-native decentralized communication protocol. Encrypted, efficient and borderless.\n\nWeb3MQ Snap provides more possibilities for building web3 social dapps. The website shows you an example of how it works. Read the documentation on GitHub to learn how to integrate the Snap with your dapp."}},{"snapId":"npm:@chainsafe/polkadot-snap","name":"Polkadot Wallet","summary":"Adds support for Polkadot to MetaMask.","description":{"description":"Adds support for Polkadot to MetaMask. After installing the Snap, visit the website to manage your Polkadot account and assets."}},{"snapId":"npm:filsnap","name":"Filecoin Wallet","summary":"Connect to Filecoin dapps using MetaMask. Manage Filecoin accounts, send FIL to Native and FEVM accounts and enable FEVM transaction insights.","description":{"description":"Connect to Filecoin dapps using MetaMask. Manage Filecoin accounts, send FIL to Native and FEVM accounts and enable FEVM transaction insights.\n\nEnhances MetaMask with native Filecoin address support (e.g. f1 addresses). (Not needed for the Filecoin EVM.)\n\nAfter installing the Snap, visit the website to connect with MetaMask and start using the Snap."}},{"snapId":"npm:@kunalabs-io/sui-metamask-snap","name":"Sui","summary":"A Snap for making transactions on the Sui blockchain.","description":{"description":"A Snap for making transactions on the Sui blockchain. After installing the Snap, visit the website to manage your Sui accounts."}},{"snapId":"npm:@near-snap/plugin","name":"NEAR Protocol","summary":"View and sign transactions for NEAR Protocol blockchain.","description":{"description":"View and sign transactions for NEAR Protocol blockchain.\n\nFeatures:\n1. You can create an account on NEAR Protocol with ed25519 key\n2. You can sign transactions on NEAR Protocol\n3. FT token transfers and token additions are visualized\n4. You can export keys to a third-party wallet\n5. Meta-transactions on NEAR Protocol are supported."}},{"snapId":"npm:@quickintel/quickintel-snap","name":"Quick Intel","summary":"Real-time token risk analysis across 28 blockchains. Protect yourself against potential scams.","description":{"description":"Quick Intel Snap performs scans on any DEX, the Quick Intel window appears with audit results before you swap the token. Real-time data to protect you from potential scams!\n\nAfter installing the Snap, you will see the Quick Intel insights in the transaction confirmation screen."}},{"snapId":"npm:@astar-network/snap","name":"Astar Wallet","summary":"Adds support for Astar to MetaMask.","description":{"description":"Adds support for Astar, an interoperable blockchain platform for Polkadot and Ethereum ecosystems supporting both Wasm and EVM smart contracts.\n\nAfter installing the Snap, visit the Astar Portal at https://portal.astar.network/ to connect. Make sure to select 'Astar Snap' under the Native Accounts options."}},{"snapId":"npm:@nocturne-xyz/snap","name":"Nocturne","summary":"Nocturne is a protocol for private accounts on Ethereum that enables users to transact with built-in asset privacy.","description":{"description":"During the Nocturne onboarding flow, the user derives an alternative private key called their Nocturne spending key. This key controls the user's funds within Nocturne. The Nocturne MetaMask Snap stores and manages this spending key.\n\nNocturne Spending Key Derivation\nDuring the first user onboarding flow, the user is prompted to sign a fixed message. The produced signature serves as the user's spending key and is stored in the Nocturne Snap. After being stored, the key never leaves the Nocturne Snap and is only accessed by the Snap for producing signatures.\n\nRegistering Your Canonical Address\nA canonical Nocturne address is a public address that can be used to generate more Nocturne stealth addresses that belong to the owner of the corresponding Nocturne spending key. One of the last steps in the user-onboarding flow is for the user to register their canonical Nocturne address against their public Ethereum address to facilitate a convenient mapping. The Nocturne Snap will prompt the user to sign a message proving that they own the canonical Nocturne address. After that, the user generates a ZKP of the signature and then submits it to the canonical address registry contract to link their Nocturne address to their public wallet.\n\nSigning Operations\nAll operations that spend private funds, (transferring ETH to a fresh address, performing a private swap, etc) must be authorized from your Nocturne spending key. When a user wants to perform an operation, the Nocturne Snap will prompt the user to confirm they would like to authorize the operation. If the user hits 'Confirm,' the Snap will sign the operation with the user's spending key, authorizing the operation."}},{"snapId":"npm:@web3-antivirus/web3-antivirus-snap","name":"Web3 Antivirus","summary":"Transact safely in Web3 with reports about scams and risks: honeypots, poisoning attacks, and more.","description":{"description":"Have your Web3 security guard right in your wallet. This Snap runs thorough checks of all contracts, addresses, and assets you interact with and evaluates their safety. If there are risks such as honeypots and poisoning attacks, it alerts you in real-time about potential scams."}},{"snapId":"npm:@rss3/social-notifier-snap","name":"RSS3 Social Notifier","summary":"Stay on top of your frens' social activities from Lens, Farcaster, and more.","description":{"description":"The RSS3 Social Notifier is a notification Snap allowing MetaMask users to connect all their on-chain social profiles (e.g. Lens, Farcaster) and sync existing social graphs. Users will get notified directly through MetaMask and stay tuned with their friends' latest activities in a human-readable style.\n\nAfter installing the Snap, visit the website at https://snap.rss3.io to connect your social profiles and configure notifications."}},{"snapId":"npm:dedaub-metamask-snap","name":"Dedaub","summary":"Simulate transactions, verify the reputation and trustworthiness of involved accounts, and calculate the financial impact.","description":{"description":"The Dedaub Transaction Simulator Snap is a tool that helps users simulate financial transactions. It allows users to verify the authenticity and credibility of the accounts involved and calculate the financial outcomes of their actions. The tool uses the Smart Contract database of Dedaub Watchdog in real-time, providing users with up-to-date and comprehensive information to make informed decisions.\n\nAfter installing the Snap, it will appear in the transaction confirmation screen."}},{"snapId":"npm:tm-chainsafer-snap-beta","name":"TM ChainSafer","summary":"Offers transaction insight and security assessment to highlight transaction risk and increase transaction awareness for users.","description":{"description":"TrendMicro ChainSafer provides the following features to ensure transaction safety as well as  more insights for users to judge transactions.\n\n1. Offering transaction risk assessment for users to check different security levels of transactions.\n2. Offering simulation for users to know asset(s) changes after transaction intention before they try to execute the real transaction.\n3. Offering project insights for users to understand more detail of targeted token contracts."}},{"snapId":"npm:@hashgraph/hedera-wallet-snap","name":"Hedera Wallet","summary":"Adds native Hedera support to MetaMask.","description":{"description":"Hedera Wallet unlocks wallet functionality via MetaMask that any other apps can interact with, thereby turning MetaMask into a native Hedera wallet without relying on Hedera JSON-RPC Relay."}},{"snapId":"npm:@metamask/snap-simple-keyring-snap","name":"MetaMask Simple Snap Keyring","summary":"An example of a key management snap for a simple keyring.","description":{"description":"An example of a key management snap for a simple keyring."}},{"snapId":"npm:@metamask/get-file-example-snap","name":"Get File Example Snap","summary":"MetaMask example snap demonstrating the use of `snap_getFile`.","description":{"description":"MetaMask example snap demonstrating the use of `snap_getFile`."}}]}}}