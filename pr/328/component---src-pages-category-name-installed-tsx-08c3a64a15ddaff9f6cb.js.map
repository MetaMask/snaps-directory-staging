{"version":3,"file":"component---src-pages-category-name-installed-tsx-08c3a64a15ddaff9f6cb.js","mappings":"qOAsBA,MAAMA,EAAkDC,IAGlD,IAHmD,KACvDC,EAAI,YACJC,GACDF,EACC,MAAMG,GAAOC,EAAAA,EAAAA,MAEPC,EAAWJ,EAAKI,SAASC,MACzB,KAAEA,GAASC,EAAAA,GAAqBF,GAEhCG,EAAWL,EAAKM,EAAEH,GAClBI,EAAKP,EAAAM,EAAG,CAAAE,GAAA,SAAAC,OAAA,CAAAJ,SAAcA,KACtBK,EAAWV,EAAAM,EAAG,CAAAE,GAAA,SAAAC,OAAA,CAAAJ,SAA0BA,KAE9C,OACEM,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CACFC,OAAQd,EAAYc,OACpBN,MAAOA,EACPG,YAAaA,EACbI,OAAQhB,EAAKI,SAASa,gBAAgBC,WACtC,EA6CN,UA9BqEC,IAG/D,IAHgE,KACpEnB,EAAI,YACJC,GACDkB,EACC,MAAMC,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,KACRF,GAASG,EAAAA,EAAAA,OACTH,GAASI,EAAAA,EAAAA,IAAYxB,EAAKI,SAASC,QAKnCoB,EAAAA,EAAAA,UAAS,WAAY,CAAEC,SAAS,GAAO,GACtC,CAAC1B,EAAKI,SAASC,KAAMe,KAEjBP,EAAAA,EAAAA,KAACf,EAAI,CAACE,KAAMA,EAAMC,YAAaA,GAAe,C","sources":["webpack://@metamask/snaps-directory/./src/pages/{Category.name}/installed.tsx"],"sourcesContent":["import { t } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { graphql, navigate } from 'gatsby';\nimport type { FunctionComponent } from 'react';\nimport { useEffect } from 'react';\n\nimport { SEO } from '../../components';\nimport type { RegistrySnapCategory } from '../../constants';\nimport { SNAP_CATEGORY_LABELS } from '../../constants';\nimport { setCategory, toggleInstalled } from '../../features';\nimport { useDispatch } from '../../hooks';\nimport type { Fields } from '../../utils';\n\nexport type CategoryInstalledProps = {\n  pageContext: {\n    locale: string;\n  };\n  data: {\n    category: Fields<Queries.Category, 'name' | 'installedBanner'>;\n  };\n};\n\nconst Head: FunctionComponent<CategoryInstalledProps> = ({\n  data,\n  pageContext,\n}) => {\n  const i18n = useLingui();\n\n  const category = data.category.name as RegistrySnapCategory;\n  const { name } = SNAP_CATEGORY_LABELS[category];\n\n  const nameText = i18n._(name);\n  const title = t`Installed ${nameText} Snaps`;\n  const description = t`Browse your installed ${nameText} Snaps on the MetaMask Snaps Directory`;\n\n  return (\n    <SEO\n      locale={pageContext.locale}\n      title={title}\n      description={description}\n      banner={data.category.installedBanner.publicURL}\n    />\n  );\n};\n\n/**\n * This page is used to redirect to the main page, while setting the category\n * filter to the current category, and only showing installed snaps.\n *\n * This page is reachable at `/{category}/installed`.\n *\n * @param props - The component props.\n * @param props.data - The page data.\n * @param props.pageContext - The page context.\n * @returns The rendered component.\n */\nconst CategoryInstalled: FunctionComponent<CategoryInstalledProps> = ({\n  data,\n  pageContext,\n}) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(toggleInstalled());\n    dispatch(setCategory(data.category.name as RegistrySnapCategory));\n\n    // According to the type definition, `navigate` returns a promise, but in\n    // practice it does not.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    navigate('/explore', { replace: true });\n  }, [data.category.name, dispatch]);\n\n  return <Head data={data} pageContext={pageContext} />;\n};\n\nexport const query = graphql`\n  query ($id: String) {\n    category(id: { eq: $id }) {\n      name\n      installedBanner {\n        publicURL\n      }\n    }\n  }\n`;\n\nexport default CategoryInstalled;\n"],"names":["Head","_ref","data","pageContext","i18n","useLingui","category","name","SNAP_CATEGORY_LABELS","nameText","_","title","id","values","description","_jsx","SEO","locale","banner","installedBanner","publicURL","_ref2","dispatch","useDispatch","useEffect","toggleInstalled","setCategory","navigate","replace"],"sourceRoot":""}