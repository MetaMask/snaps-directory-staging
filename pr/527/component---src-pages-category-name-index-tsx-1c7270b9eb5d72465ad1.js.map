{"version":3,"file":"component---src-pages-category-name-index-tsx-1c7270b9eb5d72465ad1.js","mappings":"+OAsBA,MAAMA,EAAyCC,IAA2B,IAAAC,EAAA,IAA1B,KAAEC,EAAI,YAAEC,GAAaH,EACnE,MAAM,EAAEI,IAAMC,EAAAA,EAAAA,MAERC,EAAuC,QAA/BL,EAAIC,EAAKI,SAASC,qBAAa,IAAAN,EAAAA,EAC3CC,EAAKI,SAASE,MACV,KAAEA,EAAI,YAAEC,GAAgBC,EAAAA,GAAqBJ,GAE7CK,EAAWP,EAAEI,GACbI,EAAkBR,EAAEK,GACpBI,EAAQT,EAACU,EAAAA,GAAAV,EAAC,CAAAW,GAAA,SAAAC,OAAA,CAAAL,SAAIA,MACdM,EAAUb,EAACU,EAAAA,GAAAV,EAAC,CAAAW,GAAA,SAAAC,OAAA,CAAAL,SAAIA,MAEtB,OACEO,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CACFC,OAAQjB,EAAYiB,OACpBP,MAAOA,EACPI,QAASA,EACTR,YAAaG,EACbS,OAAQnB,EAAKI,SAASe,OAAOC,WAC7B,EA4CN,UA7BmDC,IAA2B,IAAAC,EAAA,IAA1B,KAAEtB,EAAI,YAAEC,GAAaoB,EACvE,MAAME,GAAWC,EAAAA,EAAAA,MAEXC,EAA0C,QAA9BH,EAAGtB,EAAKI,SAASC,qBAAa,IAAAiB,EAAAA,EAAItB,EAAKI,SAASE,KAWlE,OATAoB,EAAAA,EAAAA,YAAU,KACRH,GAASI,EAAAA,EAAAA,IAAYF,KAKrBG,EAAAA,EAAAA,UAAS,WAAY,CAAEC,SAAS,GAAO,GACtC,CAACJ,EAAcF,KAEXP,EAAAA,EAAAA,KAACnB,EAAI,CAACG,KAAMA,EAAMC,YAAaA,GAAe,C","sources":["webpack://@metamask/snaps-directory/./src/pages/{Category.name}/index.tsx"],"sourcesContent":["import { t } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { graphql, navigate } from 'gatsby';\nimport type { FunctionComponent } from 'react';\nimport { useEffect } from 'react';\n\nimport { SEO } from '../../components';\nimport type { RegistrySnapCategory } from '../../constants';\nimport { SNAP_CATEGORY_LABELS } from '../../constants';\nimport { setCategory } from '../../features';\nimport { useDispatch } from '../../hooks';\nimport type { Fields } from '../../utils';\n\nexport type CategoryProps = {\n  pageContext: {\n    locale: string;\n  };\n  data: {\n    category: Fields<Queries.Category, 'name' | 'banner' | 'legacyMapping'>;\n  };\n};\n\nconst Head: FunctionComponent<CategoryProps> = ({ data, pageContext }) => {\n  const { _ } = useLingui();\n\n  const category = (data.category.legacyMapping ??\n    data.category.name) as RegistrySnapCategory;\n  const { name, description } = SNAP_CATEGORY_LABELS[category];\n\n  const nameText = _(name);\n  const descriptionText = _(description);\n  const title = _(t`${nameText} Snaps on the MetaMask Snaps Directory`);\n  const ogTitle = _(t`${nameText} Snaps`);\n\n  return (\n    <SEO\n      locale={pageContext.locale}\n      title={title}\n      ogTitle={ogTitle}\n      description={descriptionText}\n      banner={data.category.banner.publicURL}\n    />\n  );\n};\n\n/**\n * This page is used to redirect to the main page, while setting the category\n * filter to the current category.\n *\n * This page is reachable at `/{category}`.\n *\n * @param props - The component props.\n * @param props.data - The page data.\n * @param props.pageContext - The page context.\n * @returns The rendered component.\n */\nconst Category: FunctionComponent<CategoryProps> = ({ data, pageContext }) => {\n  const dispatch = useDispatch();\n\n  const categoryName = data.category.legacyMapping ?? data.category.name;\n\n  useEffect(() => {\n    dispatch(setCategory(categoryName as RegistrySnapCategory));\n\n    // According to the type definition, `navigate` returns a promise, but in\n    // practice it does not.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    navigate('/explore', { replace: true });\n  }, [categoryName, dispatch]);\n\n  return <Head data={data} pageContext={pageContext} />;\n};\n\nexport const query = graphql`\n  query ($id: String) {\n    category(id: { eq: $id }) {\n      name\n      legacyMapping\n      banner {\n        publicURL\n      }\n    }\n  }\n`;\n\nexport default Category;\n"],"names":["Head","_ref","_data$category$legacy","data","pageContext","_","useLingui","category","legacyMapping","name","description","SNAP_CATEGORY_LABELS","nameText","descriptionText","title","i18n","id","values","ogTitle","_jsx","SEO","locale","banner","publicURL","_ref2","_data$category$legacy2","dispatch","useDispatch","categoryName","useEffect","setCategory","navigate","replace"],"sourceRoot":""}