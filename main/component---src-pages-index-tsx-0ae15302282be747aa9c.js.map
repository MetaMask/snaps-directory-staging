{"version":3,"file":"component---src-pages-index-tsx-0ae15302282be747aa9c.js","mappings":"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","sources":["webpack://@metamask/snaps-directory/./src/pages/index.tsx","webpack://@metamask/snaps-directory/./src/assets/images/seo/home.png","webpack://@metamask/snaps-directory/./node_modules/@chakra-ui/layout/dist/chunk-W7WUSNWJ.mjs"],"sourcesContent":["import {\n  Box,\n  Container,\n  Divider,\n  Flex,\n  Heading,\n  Link,\n  Text,\n} from '@chakra-ui/react';\nimport { defineMessage, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { graphql, Link as GatsbyLink } from 'gatsby';\nimport { useEffect, type FunctionComponent } from 'react';\n\nimport banner from '../assets/images/seo/home.png';\nimport { RegistrySnapCategory, SNAP_CATEGORY_LINKS } from '../constants';\nimport { FilteredSnaps, resetFilters } from '../features';\nimport { Order } from '../features/filter/constants';\nimport { useDispatch } from '../hooks';\nimport type { Fields } from '../utils';\n\nconst GROUPS = [\n  {\n    header: defineMessage`Most Popular`,\n    limit: 6,\n    link: '/explore',\n    linkText: defineMessage`Explore All Snaps`,\n  },\n  {\n    header: SNAP_CATEGORY_LINKS[RegistrySnapCategory.Interoperability].header,\n    category: RegistrySnapCategory.Interoperability,\n    limit: 6,\n    link: SNAP_CATEGORY_LINKS[RegistrySnapCategory.Interoperability].link,\n    linkText:\n      SNAP_CATEGORY_LINKS[RegistrySnapCategory.Interoperability].linkText,\n    order: Order.DeterministicRandom,\n  },\n  {\n    header:\n      SNAP_CATEGORY_LINKS[RegistrySnapCategory.TransactionInsights].header,\n    category: RegistrySnapCategory.TransactionInsights,\n    limit: 6,\n    link: SNAP_CATEGORY_LINKS[RegistrySnapCategory.TransactionInsights].link,\n    linkText:\n      SNAP_CATEGORY_LINKS[RegistrySnapCategory.TransactionInsights].linkText,\n    order: Order.DeterministicRandom,\n  },\n  {\n    header: SNAP_CATEGORY_LINKS[RegistrySnapCategory.Notifications].header,\n    category: RegistrySnapCategory.Notifications,\n    limit: 3,\n    link: SNAP_CATEGORY_LINKS[RegistrySnapCategory.Notifications].link,\n    linkText: SNAP_CATEGORY_LINKS[RegistrySnapCategory.Notifications].linkText,\n    order: Order.DeterministicRandom,\n  },\n  {\n    header: defineMessage`Latest`,\n    limit: 3,\n    link: '/latest',\n    linkText: defineMessage`See Latest`,\n    order: Order.Latest,\n  },\n];\n\nconst IndexPage: FunctionComponent = () => {\n  const i18n = useLingui();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(resetFilters());\n  }, [dispatch]);\n\n  return (\n    <Container\n      maxWidth=\"container.xl\"\n      paddingTop=\"0\"\n      marginTop={{ base: 4, md: 20 }}\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Box maxWidth=\"31.25rem\" width=\"100%\">\n        <Heading as=\"h2\" fontSize=\"4xl\" marginBottom=\"1\">\n          <Trans>Discover Snaps</Trans>\n        </Heading>\n        <Text>\n          <Trans>\n            Explore community-built Snaps to customize your web3 experience via\n            our official directory.{' '}\n            <Link href=\"https://metamask.io/snaps/\" isExternal={true}>\n              Learn more\n            </Link>{' '}\n            and{' '}\n            <Link\n              href=\"https://support.metamask.io/hc/en-us/articles/18245938714395\"\n              isExternal={true}\n            >\n              FAQ\n            </Link>\n            .\n          </Trans>\n        </Text>\n      </Box>\n\n      <Divider my=\"8\" />\n\n      {GROUPS.map(\n        ({ header, limit, category, link, linkText, order }, index) => (\n          <>\n            <Flex\n              width=\"100%\"\n              marginBottom=\"8\"\n              flexDirection=\"row\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Heading as=\"h2\" fontSize=\"2xl\" fontWeight=\"500\">\n                {i18n._(header)}\n              </Heading>\n              <Link as={GatsbyLink} to={link} variant=\"landing\">\n                {i18n._(linkText)}\n              </Link>\n            </Flex>\n            <FilteredSnaps limit={limit} category={category} order={order} />\n\n            {index !== GROUPS.length - 1 && <Divider mt=\"12\" mb=\"8\" />}\n          </>\n        ),\n      )}\n    </Container>\n  );\n};\n\ntype HeadProps = {\n  data: {\n    site: {\n      siteMetadata: Fields<\n        Queries.SiteSiteMetadata,\n        'title' | 'description' | 'author' | 'siteUrl'\n      >;\n    };\n  };\n};\n\nexport const Head: FunctionComponent<HeadProps> = ({ data }) => {\n  const image = `${data.site.siteMetadata.siteUrl}${banner}`;\n\n  return (\n    <>\n      <html lang=\"en\" />\n      <title>{data.site.siteMetadata.title}</title>\n      <meta name=\"description\" content={data.site.siteMetadata.description} />\n      <meta property=\"og:title\" content={data.site.siteMetadata.title} />\n      <meta\n        property=\"og:description\"\n        content={data.site.siteMetadata.description}\n      />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"og:image\" content={image} />\n      <meta name=\"og:image:width\" content=\"1200\" />\n      <meta name=\"og:image:height\" content=\"630\" />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={data.site.siteMetadata.author} />\n      <meta name=\"twitter:title\" content={data.site.siteMetadata.title} />\n      <meta\n        name=\"twitter:description\"\n        content={data.site.siteMetadata.description}\n      />\n      <meta name=\"twitter:image\" content={image} />\n    </>\n  );\n};\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        siteUrl\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","export default __webpack_public_path__ + \"static/home-3da7273f125d0f7c0add3b849d33e152.png\";","'use client'\n\n// src/divider.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Divider = forwardRef(function Divider2(props, ref) {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = useStyleConfig(\"Divider\", props);\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = omitThemingProps(props);\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\"\n    },\n    horizontal: {\n      borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\"\n    }\n  };\n  return /* @__PURE__ */ jsx(\n    chakra.hr,\n    {\n      ref,\n      \"aria-orientation\": orientation,\n      ...rest,\n      __css: {\n        ...styles,\n        border: \"0\",\n        borderColor,\n        borderStyle,\n        ...dividerStyles[orientation],\n        ...__css\n      },\n      className: cx(\"chakra-divider\", className)\n    }\n  );\n});\nDivider.displayName = \"Divider\";\n\nexport {\n  Divider\n};\n//# sourceMappingURL=chunk-W7WUSNWJ.mjs.map"],"names":["GROUPS","header","id","limit","link","linkText","SNAP_CATEGORY_LINKS","RegistrySnapCategory","Interoperability","category","order","Order","DeterministicRandom","TransactionInsights","Notifications","Latest","Head","_ref2","data","image","site","siteMetadata","siteUrl","banner","_jsxs","_Fragment","children","_jsx","lang","title","name","content","description","property","author","IndexPage","i18n","useLingui","dispatch","useDispatch","useEffect","resetFilters","Container","maxWidth","paddingTop","marginTop","base","md","display","flexDirection","Box","width","Heading","as","fontSize","marginBottom","Trans","Text","components","Link","href","isExternal","Divider","my","map","_ref","index","Flex","justifyContent","alignItems","fontWeight","_","GatsbyLink","to","variant","FilteredSnaps","length","mt","mb","props","ref","borderLeftWidth","borderBottomWidth","borderTopWidth","borderRightWidth","borderWidth","borderStyle","borderColor","styles","className","orientation","__css","rest","dividerStyles","vertical","height","horizontal","jsx","hr","border","cx","displayName"],"sourceRoot":""}